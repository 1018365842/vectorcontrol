# ESC configuration file for the Multistar 2213-935 motor from HobbyKing.
# Tuned for a 10x4.5 prop, although these settings will work for smaller props
# as well as unloaded operation.
#
# The MT2213-935 is designed for multirotors, so PWM input is mapped to torque
# control for faster response.

[motor]
# Number of motor poles. Used to convert between mechanical and electrical
# speeds.
num_poles = 14

# Motor current limit in amps. This determines the maximum torque controller
# setpoint, as well as the maximum allowable torque setpoint slew rate.
current_limit = 15.0

# Motor voltage limit in volts. The current controller's commanded voltage
# will never exceed this value.
#
# Note that this may safely be above the rated voltage of the motor; to
# determine the actual motor voltage limit, divide the motor's rated maximum
# power by the motor current limit.
voltage_limit = 11.1

# Motor start-up current in amps. This is used as the current setpoint until
# the motor reaches twice its minimum controllable RPM. Higher values may
# speed up initial alignment, but may also result in oscillation. Very high
# values may result in damage.
startup_current = 5.0

# Motor minimum controllable RPM. This is used to force the motor to rotate
# before the state estimation filter has locked, and also determines how
# long the motor_startup_current is used for. The value depends on the motor's
# KV as well as the number of poles; it should be low enough that the motor
# can lock onto the rotation rate immediately, but high enough that the back
# EMF is measurable.
rpm_min = 200.0

# Motor maximum rated RPM. This limits the upper end of the PWM setpoint range
# if it's lower than KV multiplied by Vbus.
rpm_max = 9000.0

# Motor KV in RPM per volt. This can be taken from the motor's spec sheet;
# accuracy will help control performance but a 20% error is fine.
kv = 850.0

[rpmctl]
# Speed (RPM) controller gain. Determines controller aggressiveness; units
# are amp-seconds per radian. Systems with higher rotational inertia (large
# props) will need gain increased; systems with low rotational inertia
# (small props) may need gain decreased. Higher values result in faster
# response, but may result in oscillation and excessive overshoot. Lower
# values result in a slower, smoother response.
gain = 0.02

# Speed controller bandwidth, in Hz.
bandwidth = 75.0

# Speed controller maximum acceleration, in rpm/s.
accel_max = 30000.0

[uavcan]
# Interval in seconds at which the UAVCAN standard ESC status message should
# be sent.
escstatus_interval = 0.01

# Node ID of this ESC in the UAVCAN network.
node_id = 1

# Index of this ESC in the UAVCAN ESC setpoint broadcast message.
esc_index = 0

[pwm]
# If 'speed', the PWM signal is used as the input to the speed controller,
# with input pulse width proportional to the square of the speed controller
# setpoint. If 'torque', the PWM signal is used as the input to the torque
# controller (the speed controller is bypassed), and the input pulse width is
# proportional to torque controller setpoint.
ctl_mode = torque
